# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: build

on:
  workflow_dispatch:
    inputs:
      productionRelease:
        description: 'Release Package - Draft'     
        default: false
      draftRelease:
        description: 'Release Package - Production'     
        default: false        
  push:
    branches: [ master ]
    tags:
      - "v*"
      - "-draft*"
      - "-rc*"    
  pull_request:
    types: [opened, synchronize, reopened, closed]
jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
    env:
      filename: levelup-for-dynamics-365-power-apps
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      name: List the state of node modules
      continue-on-error: true
      run: npm list
        
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3.6.0
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Read package.json
      uses: tyankatsu0105/read-package-version-actions@v1
      id: package-version        
    
    - run: npm ci

    - run: npm run pack
    
    - name: Create Release ${{ env.filename }}-${{ steps.package-version.outputs.version }}
      id: create-draft-release
      uses: ncipollo/release-action@v1.12.0
      if: contains(github.ref, '-draft') || github.event.inputs.draftRelease
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        commit: ${{ github.ref }}
        name: ${{ env.filename }}-${{ steps.package-version.outputs.version }}
        draft: github.event.inputs.draftRelease
        prerelease: github.event.inputs.draftRelease
        artifacts: "./packages/${{ env.filename }}-${{ steps.package-version.outputs.version }}-chrome.zip"
        replacesArtifacts: true
